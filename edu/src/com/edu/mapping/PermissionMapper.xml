<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.edu.dao.PermissionMapper" >
  <resultMap id="BaseResultMap" type="com.edu.domain.Permission" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="desc" property="desc" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, token, url, `desc`
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from app_permission
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from app_permission
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.edu.domain.Permission" >
    insert into app_permission (id, token, url, `desc`)
    values (#{id,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.edu.domain.Permission" >
    insert into app_permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="desc != null" >
        `desc`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="desc != null" >
        #{desc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.edu.domain.Permission" >
    update app_permission
    <set >
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="desc != null" >
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.edu.domain.Permission" >
    update app_permission
    set token = #{token,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      `desc` = #{desc,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  
  <select id="findPermissionsByRoleId" parameterType="String" resultType="String">
  	select token
    from app_permission
    where id = #{roleid,jdbcType=VARCHAR}
  </select>
  
  
  	<select id="getAllPermission" resultMap="BaseResultMap" parameterType="com.edu.vo.PermissionVo">
  		select <include refid="Base_Column_List" /> from app_permission
  		limit  #{startRow,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER} 
  	</select>
	
	<select id="getAllPermissionCount"  parameterType="com.edu.vo.PermissionVo" resultType="int">
  		select count(id)  
      	from app_permission
  </select>
  
  
  
  
</mapper>